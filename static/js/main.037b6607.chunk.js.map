{"version":3,"sources":["components/actions/index.js","components/actions/actionTypes.js","components/App.js","components/reducers/addLinkReducers.js","components/reducers/index.js","index.js","components/localStorage.js"],"names":["addLink","inputLink","type","payload","App","useState","linkInput","formInf","setFormInf","isEditMode","setEditMode","linkList","useSelector","state","dispatch","useDispatch","Container","fluid","textAlign","className","TextField","name","value","onChange","e","target","onKeyPress","event","key","indexOf","trim","alert","placeholder","id","label","variant","size","Button","color","onClick","onButtonClick","map","link","index","Fragment","href","rel","src","alt","deleteLink","onDelete","addLinkReducer","action","newState","filter","val","rootReducer","combineReducers","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.037b6607.chunk.js","sourcesContent":["// import { ADD_LINK, SIGN_IN, SIGN_OUT, DELETE_LINK } from \"./actionTypes\";\r\nimport { ADD_LINK, DELETE_LINK } from \"./actionTypes\";\r\n\r\nexport const addLink = inputLink => {\r\n  return {\r\n    type: ADD_LINK,\r\n    payload: inputLink\r\n  };\r\n};\r\n\r\nexport const deleteLink = index => {\r\n  return {\r\n    type: DELETE_LINK,\r\n    payload: index\r\n  };\r\n};\r\n","export const ADD_LINK = \"ADD_LINK\";\r\nexport const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const DELETE_LINK = \"DELETE_LINK\";\r\n","import React, { useState } from \"react\";\r\nimport { addLink, deleteLink } from \"./actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField, Container } from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n  const [formInf, setFormInf] = useState({ linkInput: \"\" });\r\n  const [isEditMode, setEditMode] = useState(false);\r\n\r\n  const onInputChange = e => {\r\n    setFormInf({ ...formInf, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const linkList = useSelector(state => state.linkList);\r\n  const dispatch = useDispatch();\r\n\r\n  const onButtonClick = formInf => {\r\n    if (!linkList.indexOf(formInf.linkInput)) {\r\n      alert(\"image already exists\");\r\n      setFormInf({ linkInput: \"\" });\r\n    } else if (formInf.linkInput.trim() === \"\") {\r\n    } else {\r\n      dispatch(addLink(formInf.linkInput));\r\n      setFormInf({ linkInput: \"\" });\r\n    }\r\n  };\r\n\r\n  const onKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      if (!linkList.indexOf(formInf.linkInput)) {\r\n        alert(\"image already exists\");\r\n        setFormInf({ linkInput: \"\" });\r\n      } else if (formInf.linkInput.trim() === \"\") {\r\n      } else {\r\n        dispatch(addLink(formInf.linkInput));\r\n        setFormInf({ linkInput: \"\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDelete = index => {\r\n    dispatch(deleteLink(index));\r\n  };\r\n\r\n  const handleToggleButton = () => {\r\n    setEditMode(!isEditMode);\r\n  };\r\n\r\n  const renderImages = () => {\r\n    if (isEditMode) {\r\n      return (\r\n        <div className=\"flex-container\">\r\n          {linkList.map((link, index) => (\r\n            <React.Fragment key={index}>\r\n              <div className=\"flex-container block center\">\r\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img\r\n                    src={link}\r\n                    alt=\"listOfPics\"\r\n                    className=\"list center margin\"\r\n                  ></img>\r\n                </a>\r\n                <button className=\"btn\" onClick={() => onDelete(index)}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"flex-container\">\r\n          {linkList.map((link, index) => (\r\n            <React.Fragment key={index}>\r\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img\r\n                  src={link}\r\n                  alt=\"listOfPics\"\r\n                  className=\"list center margin\"\r\n                ></img>\r\n              </a>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderEditButton = () => {\r\n    if (isEditMode) {\r\n      return \"Back to View Mode\";\r\n    } else {\r\n      return \"Switch to Edit Mode\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"center marginTop\"> */}\r\n      {/* <div className=\"ui input displayInline\"> */}\r\n      <h1>Welcome to Your ScrapBook</h1>\r\n      <Container fluid=\"true\" textAlign=\"center\" className=\"center marginTop\">\r\n        <TextField\r\n          name=\"linkInput\"\r\n          value={formInf.linkInput || \"\"}\r\n          onChange={onInputChange}\r\n          onKeyPress={onKeyPress}\r\n          placeholder=\"Paste Image Link Here!\"\r\n          id=\"outlined-basic\"\r\n          label=\"Insert Image Link Here\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fluid=\"true\"\r\n        />\r\n        <Button\r\n          // className=\"ui button primary\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() => onButtonClick(formInf)}\r\n        >\r\n          Add to MyScrapBook\r\n        </Button>\r\n        <Button\r\n          onClick={handleToggleButton}\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          className=\"margin\"\r\n        >\r\n          {renderEditButton()}\r\n        </Button>\r\n      </Container>\r\n\r\n      {/* </div> */}\r\n      {renderImages()}\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ADD_LINK, DELETE_LINK } from \"../actions/actionTypes\";\r\n\r\nconst addLinkReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_LINK:\r\n      return [...state, action.payload];\r\n    case DELETE_LINK:\r\n      const newState = state.filter(val => val !== state[action.payload]);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addLinkReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport addLinkReducer from \"./addLinkReducers\";\r\n\r\nconst rootReducer = combineReducers({ linkList: addLinkReducer });\r\n\r\nexport default rootReducer;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./components/reducers\";\r\nimport { loadState, saveState } from \"./components/localStorage\";\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware()));\r\n\r\nconst store = createStore(rootReducer, loadState());\r\nstore.subscribe(() => {\r\n  saveState({\r\n    linkList: store.getState().linkList\r\n  });\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    // ignore\r\n  }\r\n};\r\n"],"sourceRoot":""}